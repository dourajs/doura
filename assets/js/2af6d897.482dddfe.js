"use strict";(self.webpackChunkdoura_docs=self.webpackChunkdoura_docs||[]).push([[462],{4852:(e,t,r)=>{r.d(t,{Zo:()=>u,kt:()=>m});var n=r(9231);function o(e,t,r){return t in e?Object.defineProperty(e,t,{value:r,enumerable:!0,configurable:!0,writable:!0}):e[t]=r,e}function a(e,t){var r=Object.keys(e);if(Object.getOwnPropertySymbols){var n=Object.getOwnPropertySymbols(e);t&&(n=n.filter((function(t){return Object.getOwnPropertyDescriptor(e,t).enumerable}))),r.push.apply(r,n)}return r}function i(e){for(var t=1;t<arguments.length;t++){var r=null!=arguments[t]?arguments[t]:{};t%2?a(Object(r),!0).forEach((function(t){o(e,t,r[t])})):Object.getOwnPropertyDescriptors?Object.defineProperties(e,Object.getOwnPropertyDescriptors(r)):a(Object(r)).forEach((function(t){Object.defineProperty(e,t,Object.getOwnPropertyDescriptor(r,t))}))}return e}function s(e,t){if(null==e)return{};var r,n,o=function(e,t){if(null==e)return{};var r,n,o={},a=Object.keys(e);for(n=0;n<a.length;n++)r=a[n],t.indexOf(r)>=0||(o[r]=e[r]);return o}(e,t);if(Object.getOwnPropertySymbols){var a=Object.getOwnPropertySymbols(e);for(n=0;n<a.length;n++)r=a[n],t.indexOf(r)>=0||Object.prototype.propertyIsEnumerable.call(e,r)&&(o[r]=e[r])}return o}var c=n.createContext({}),p=function(e){var t=n.useContext(c),r=t;return e&&(r="function"==typeof e?e(t):i(i({},t),e)),r},u=function(e){var t=p(e.components);return n.createElement(c.Provider,{value:t},e.children)},l="mdxType",d={inlineCode:"code",wrapper:function(e){var t=e.children;return n.createElement(n.Fragment,{},t)}},f=n.forwardRef((function(e,t){var r=e.components,o=e.mdxType,a=e.originalType,c=e.parentName,u=s(e,["components","mdxType","originalType","parentName"]),l=p(r),f=o,m=l["".concat(c,".").concat(f)]||l[f]||d[f]||a;return r?n.createElement(m,i(i({ref:t},u),{},{components:r})):n.createElement(m,i({ref:t},u))}));function m(e,t){var r=arguments,o=t&&t.mdxType;if("string"==typeof e||o){var a=r.length,i=new Array(a);i[0]=f;var s={};for(var c in t)hasOwnProperty.call(t,c)&&(s[c]=t[c]);s.originalType=e,s[l]="string"==typeof e?e:o,i[1]=s;for(var p=2;p<a;p++)i[p]=r[p];return n.createElement.apply(null,i)}return n.createElement.apply(null,r)}f.displayName="MDXCreateElement"},7917:(e,t,r)=>{r.r(t),r.d(t,{assets:()=>c,contentTitle:()=>i,default:()=>l,frontMatter:()=>a,metadata:()=>s,toc:()=>p});var n=r(8041),o=(r(9231),r(4852));const a={id:"typescript",title:"Typescript"},i=void 0,s={unversionedId:"guides/typescript",id:"guides/typescript",title:"Typescript",description:"You don't need to do much in order to make your state compatible with TS",source:"@site/docs/guides/typescript.md",sourceDirName:"guides",slug:"/guides/typescript",permalink:"/doura/docs/guides/typescript",draft:!1,editUrl:"https://github.com/dourajs/doura/tree/main/docs/guides/typescript.md",tags:[],version:"current",frontMatter:{id:"typescript",title:"Typescript"}},c={},p=[],u={toc:p};function l(e){let{components:t,...r}=e;return(0,o.kt)("wrapper",(0,n.Z)({},u,r,{components:t,mdxType:"MDXLayout"}),(0,o.kt)("p",null,"You don't need to do much in order to make your state compatible with TS: make sure ",(0,o.kt)("a",{parentName:"p",href:"https://www.typescriptlang.org/tsconfig#strict"},(0,o.kt)("inlineCode",{parentName:"a"},"strict")),", or at the very least, ",(0,o.kt)("a",{parentName:"p",href:"https://www.typescriptlang.org/tsconfig#noImplicitThis"},(0,o.kt)("inlineCode",{parentName:"a"},"noImplicitThis")),", are enabled and Doura will infer the type of your state automatically! However, there are a few cases where you should give it a hand with some casting:"),(0,o.kt)("pre",null,(0,o.kt)("code",{parentName:"pre",className:"language-ts"},"export const useUserStore = defineModel({\n  state: {\n    // for initially empty lists\n    userList: [] as UserInfo[],\n    // for data that is not yet loaded\n    user: null as UserInfo | null,\n  },\n})\n\ninterface UserInfo {\n  name: string\n  age: number\n}\n")),(0,o.kt)("p",null,"If you prefer, you can define the state with an interface and type the ",(0,o.kt)("inlineCode",{parentName:"p"},"state"),":"),(0,o.kt)("pre",null,(0,o.kt)("code",{parentName:"pre",className:"language-ts"},"interface State {\n  userList: UserInfo[]\n  user: UserInfo | null\n}\n\nexport const useUserStore = defineModel({\n  state: {\n    userList: [],\n    user: null,\n  } as State,\n})\n\ninterface UserInfo {\n  name: string\n  age: number\n}\n")))}l.isMDXComponent=!0}}]);